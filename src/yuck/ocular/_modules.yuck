(defwidget _infobattery [battery status one two three four five six seven charge ?class]
  (box :class "ocular-battery-box ${class}"
       :space-evenly false
       :spacing 8
    (label :class "ocular-battery-icon ${class}" :text {status == 'Charging' ? charge :
      battery < 15 ? seven :
        battery < 30 ? six :
          battery < 45 ? five :
            battery < 60 ? four :
              battery < 75 ? three :
                battery < 95 ? two : one})
    (label :class "ocular-battery-label ${class}" :text "${battery}%")))

(defwidget _infonetwork [strength offline excellent good okay slow ?class]
  (box :class "ocular-network-box ${class}"
       :space-evenly false
       :spacing 8
    (label :class "ocular-network-icon ${class}" :text {strength == "" ? offline :
      strength < 26 ? slow :
        strength < 51 ? okay :
          strength < 76 ? good : excellent})
    (label :class "ocular-network-label ${class}"
           :text "${strength == "" ? 0 : strength}%")))

(defwidget _infogeneric [level icon ?class]
  (box :class "ocular-generic-box"
       :space-evenly false
       :spacing 8
    (label :class "ocular-generic-icon ${class}" :text icon)
    (label :class "ocular-generic-label ${class}" :text "${round(level, 0)}%")))

(defwidget _infotemp [level icon ?class]
  (box :class "ocular-temp-box"
       :space-evenly false
       :spacing 8
    (label :class "ocular-temp-icon ${class}" :text icon)
    (label :class "ocular-temp-label ${class}" :text "${round(level, 0)}Â°C")))

(defwidget _radialtime [hour min sec]
  (circular-progress :value {sec * 100 / 60}
                     :valign "center"
                     :vexpand true
                     :thickness 25
                     :class "ocular-time-radial" "${hour}:${min}"))

(defwidget _sundialinfo [class halign ?prefix]
  (label :class "${class}-sundial-label" :halign halign
             :text "${prefix}${vertigo_time.hour >= 2 && vertigo_time.hour <= 4 ? "Early Morning" :
               vertigo_time.hour <= 5 ? "Dawn" :
               vertigo_time.hour >= 6 && (vertigo_time.hour <= 8 && vertigo_time.min <= 59) ? "Morning" :
               vertigo_time.hour >= 9 && (vertigo_time.hour <= 11 && vertigo_time.min <= 59) ? "Late Morning" :
               vertigo_time.hour == 12 && vertigo_time.min <= 29 ? "Midday" :
               vertigo_time.hour >= 12 && vertigo_time.hour <= 16 ? "Afternoon" :
               vertigo_time.hour > 16 && vertigo_time.hour <= 17 ? "Late Afternoon" :
               (vertigo_time.hour >= 17 && vertigo_time.min <= 1) || (vertigo_time.hour <= 18 && vertigo_time.min <= 20) ? "Early Evening" :
               vertigo_time.hour >= 18 && vertigo_time.hour <= 19 ? "Dusk" :
               vertigo_time.hour > 19 && vertigo_time.hour <= 21 ? "Late Evening" :
               vertigo_time.hour > 21 ? "Night" : "Midnight"}"))

;; vim:ft=yuck
